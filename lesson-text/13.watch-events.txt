На какие события реагирует функция watch()? По умолчанию это все события, которые
как либо связаны с изменением файлов или директории. Так же мы можем собственноручно
указывать, какие события необходимы. Это необходимо для того, чтобы лишний раз не
вызывать задачу в моменты, когда в этом нет необходимости. Например, мы не хотим
выполнять действие при добавлении файла в директорию, а только при его изменении.

Для этого используется второй параметр функции watch() который определяет параметры
работы функции. За то, на какие действия будет происходить вызов задачи отвечает
параметр events. Внутри него можно указать или одно конкретное событие или сразу
несколько. Разберёмся с тем, какие именно события доступны при использовании Gulp:

add — добавление нового файла
change — изменение файла
unlink — удаление файла
addDir — добавление директории
unlinkDir — удаление директории
ready — окончание сканирования путей для отслеживания. В этот момент вотчер готов
следить за изменениями. Такой этап можно назвать окончанием инициализации
error — ошибка работы отслеживания

По умолчанию параметр events имеет значение all, что указывает на отслеживание всех
событий. Исключением являются события ready и error, так как они относятся больше к
внутренней логике работы самой функции.

См. ./../lesson-file/gulpfile [watch-events].js
См. ./../images/watch-events.png

В большинстве случаев используют событие по умолчанию, то есть all.
Так как для компиляции SASS, Pug и других препроцессоров/шаблонизаторов
критично не только изменение файлов, но и их добавление/удаление.

Важно: в отличие от обычных задач, watch() будет работать ровно до того момента,
пока его принудительно не остановят. Это важно учитывать при разработке. Можно
забыть остановить процесс в терминале и получить те компиляции, которые мы не ожидали